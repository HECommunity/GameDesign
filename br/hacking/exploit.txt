# Exploit attack

Exploit, as the name says, will look for vulnerabilities within specific services and try to exploit them. These services are represented by connections. Once again, connections play an important role here.

Examples of services include: SSH, FTP and X11 (more to come!).

### Attacking

The attacker must first select a connection (which represents a service), the target server, and then use his exploit (should we use a single exploit software, or one for each service?).

Suppose A has an SSH connection to B. C sees this connection through anymap. C, then, selects this connection, targets server B and launches the exploit attack. He could also have targeted server A instead. If/when the exploit succeeds, C will have an SSH connection to B.

Exploiting a connection of type X will only affect service X, usually in different ways. For example, exploiting an FTP connection gives the attacker access to the victim's files. Exploiting an X11 connection gives the attacker access to the remote desktop of the victim (read-only if SSH connection is not exploited too).

### Defending

A natural defense against exploits are firewalls. The victim's firewall will passively work on increasing the duration taken to complete the exploit process.

There are other things a user can do to further protect his connection (services). He can encrypt them. In that case, the attacker would have to decrypt it first, exposing himself. We can also discuss the possibility of spoofing (hiding) the connection, where the attacker would have first to "seek" the connection, once again exposing himself. The spoof additional layer of defense must yet be discussed (real-life similarities? too many protection layers?).

The victim can also use the active version of her firewall against the exploit attack.

Exploit attacks are much "quieter" and "stealthier" than bruteforce ones. While firewalls can notify users of attacks (including with SMS/push notifications/email notifications), a firewall will take much longer to spot an exploit attack.

### Duration

Once again, default version dynamics and level balance applies here. When compared to bruteforce attacks, I think exploits should be a bit faster (under the same variables), specially because bruteforce has an additional layer of defense (`Hasher`).
